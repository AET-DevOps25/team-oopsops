apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: oopsops-monitoring
  labels:
    app.kubernetes.io/name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
    spec:
      securityContext:
        fsGroup: 472
      initContainers:
        - name: fix-grafana-perms
          image: busybox
          command: ["sh", "-c", "chown -R 472:472 /var/lib/grafana"]
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
          securityContext:
            runAsUser: 0
      containers:
        - name: grafana
          image: {{ .Values.grafana.image }}
          ports:
            - containerPort: 3000
          env:
          - name: GF_SECURITY_ADMIN_USER
            value: {{ .Values.grafana.adminUser }}
          - name: GF_SECURITY_ADMIN_PASSWORD
            value: {{ .Values.grafana.adminPassword }}
          - name: GF_PATHS_PROVISIONING
            value: /etc/grafana/provisioning
          resources:
            requests:
              memory: {{ .Values.grafana.resources.requests.memory }}
              cpu: {{ .Values.grafana.resources.requests.cpu }}
            limits:
              memory: {{ .Values.grafana.resources.limits.memory }}
              cpu: {{ .Values.grafana.resources.limits.cpu }}
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: grafana-dashboard-provider
              mountPath: /etc/grafana/provisioning/dashboards
            - name: grafana-dashboard-files
              mountPath: /var/lib/grafana/dashboards
          readinessProbe:
              httpGet:
                path: /api/health
                port: 3000
              initialDelaySeconds: 30
              periodSeconds: 10
          livenessProbe:
              httpGet:
                path: /api/health
                port: 3000
              initialDelaySeconds: 60
              periodSeconds: 30
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-pvc
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
      - name: grafana-dashboard-provider
        configMap:
          name: grafana-dashboard-provider
      - name: grafana-dashboard-files
        configMap:
          name: grafana-dashboard-files
