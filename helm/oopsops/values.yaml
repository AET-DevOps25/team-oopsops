openai:
  secretName: openai-secret

documentService:
  image:
    repository: ghcr.io/aet-devops25/team-oopsops/server/document-service
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8091
    targetPort: 8091
  replicaCount: 1
  env:
    - name: SPRING_PROFILES_ACTIVE
      value: dev
  database:
    url: jdbc:postgresql://document-db:5432/documentdb
    username: dev_user
    password: dev_pass

archiveService:
  image:
    repository: ghcr.io/aet-devops25/team-oopsops/server/archive-service
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8093
    targetPort: 8093
  replicaCount: 1
  env:
    - name: SPRING_PROFILES_ACTIVE
      value: dev

authenticationService:
  image:
    repository: ghcr.io/aet-devops25/team-oopsops/server/authentication-service
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8092
    targetPort: 8092
  replicaCount: 1
  env:
    - name: SPRING_PROFILES_ACTIVE
      value: dev

client:
  image:
    repository: ghcr.io/aet-devops25/team-oopsops/client
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 3000
    targetPort: 80
  replicaCount: 1

genaiService:
  image:
    repository: ghcr.io/aet-devops25/team-oopsops/genai-service
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8000
    targetPort: 8000
  replicaCount: 1

ingress:
  enabled: true
  className: "nginx"
  tls: true
  host: "redacta.student.k8s.aet.cit.tum.de"
  secretName: "devops25-tls"
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-body-size: "20m"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, OPTIONS, PUT, DELETE"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Authorization,Content-Type"
    nginx.ingress.kubernetes.io/cors-max-age: "1728000"